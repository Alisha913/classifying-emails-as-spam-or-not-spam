# -*- coding: utf-8 -*-
"""tsk2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HpY67e98onNQTKv5PplpSiFHB7qbuGhm
"""

# Step 1: Import Libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.svm import SVC
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.impute import SimpleImputer

# Step 2: Load Dataset
# Replace this with the actual path to your dataset
df = pd.read_csv('emails.csv')

# Step 3: Preprocess Data
# Drop the 'Email No.' column and separate features (X) from labels (y)
X = df.drop(columns=['Email No.', 'Prediction'])
y = df['Prediction']

# Handle missing values by imputing with the mean of the columns
imputer = SimpleImputer(strategy='mean')
X = imputer.fit_transform(X)

# Step 4: Train-Test Split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 5: Model Training and Evaluation

# Naive Bayes
nb_model = MultinomialNB()
nb_model.fit(X_train, y_train)
y_pred_nb = nb_model.predict(X_test)

print("Naive Bayes Classifier")
accuracy_nb = accuracy_score(y_test, y_pred_nb)
print("Accuracy:", accuracy_nb)
print("Confusion Matrix:\n", confusion_matrix(y_test, y_pred_nb))
print("Classification Report:\n", classification_report(y_test, y_pred_nb))

# Plot confusion matrix for Naive Bayes
plt.figure(figsize=(8, 6))
cm_nb = confusion_matrix(y_test, y_pred_nb)
sns.heatmap(cm_nb, annot=True, cmap='Blues', fmt='d', cbar=False)
plt.xlabel('Predicted Labels')
plt.ylabel('True Labels')
plt.title('Confusion Matrix - Naive Bayes')
plt.show()

# Support Vector Machine
svm_model = SVC(kernel='linear')
svm_model.fit(X_train, y_train)
y_pred_svm = svm_model.predict(X_test)

print("\nSupport Vector Machine Classifier")
accuracy_svm = accuracy_score(y_test, y_pred_svm)
print("Accuracy:", accuracy_svm)
print("Confusion Matrix:\n", confusion_matrix(y_test, y_pred_svm))
print("Classification Report:\n", classification_report(y_test, y_pred_svm))

# Plot confusion matrix for SVM
plt.figure(figsize=(8, 6))
cm_svm = confusion_matrix(y_test, y_pred_svm)
sns.heatmap(cm_svm, annot=True, cmap='Greens', fmt='d', cbar=False)
plt.xlabel('Predicted Labels')
plt.ylabel('True Labels')
plt.title('Confusion Matrix - SVM')
plt.show()

# Plotting accuracy comparison
plt.figure(figsize=(8, 4))
models = ['Naive Bayes', 'SVM']
accuracy = [accuracy_nb, accuracy_svm]
plt.bar(models, accuracy, color=['blue', 'green'])
plt.ylabel('Accuracy')
plt.title('Accuracy Comparison between Models')
plt.ylim(0.0, 1.0)
plt.show()